apiVersion: apps/v1
kind: Deployment
metadata:
  name: alpha-ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alpha-ui
  template:
    metadata:
      labels:
        app: alpha-ui
    spec:
      #      initContainers:
      #        - name: init-db
      #          image: busybox:1.31
      #          command: ['sh', '-c', 'echo -e "Checking for the availability of Auth Server deployment"; while ! nc -z weather 8080; do sleep 1; printf "-"; done; echo -e "  >> Auth Server has started";']
      containers:
        - name: alpha-ui
          image: proudevops/ui-weather:latest  # leonardtia/ui-weather:latest
          imagePullPolicy: Always  # Set the image pull policy to Always
          env:
            - name: AUTH_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: AUTH_HOST
            - name: AUTH_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: AUTH_PORT
            - name: WEATHER_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: WEATHER_HOST
            - name: WEATHER_PORT
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: WEATHER_PORT
            - name: REDIS_USER
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: REDIS_USER
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: app-secrets-asm
                  key: REDIS_PASSWORD
            - name: REDIS_HOST
              valueFrom:
                configMapKeyRef:
                  name: app-configmap
                  key: REDIS_HOST
          ports:
            - containerPort: 3000

---
apiVersion: v1
kind: Service
metadata:
  name: ui
  annotations:
    # alb.ingress.kubernetes.io/healthcheck-path: /index.html
spec:
  selector:
    app: alpha-ui
  ports:
    - protocol: TCP
      port: 3000
      targetPort: 3000
  type: NodePort
